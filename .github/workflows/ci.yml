name: CI

on:
  push:
    branches: [main]        # run on direct pushes
  pull_request:             # and on every PR targeting main
    branches: [main]

jobs:
  test:
    name: Python ${{ matrix.python-version }} • ${{ matrix.os }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11" ]
        os: [ ubuntu-latest ]          # keep single OS now; easy to add mac/win later

    steps:
      # 1 — Checkout code
      - uses: actions/checkout@v4

      # 2 — Python toolchain (matrix)
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      # 3 — Install Poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1

      # 3.1 — Add Poetry to PATH
      - name: Install dependencies
        run: |
          poetry --version
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-root --with dev

      # 4 — Terraform Install and Checks
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/5c0f6ef6891f12c61b4db527177f7b2a19d2f43f/install_linux.sh | bash

      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      
      - name: Terraform validation (fmt, lint, tfsec, trivy)
        run: |
          terraform -chdir=infra/dev init -backend=false

          # Run all pre-commit Terraform hooks
          poetry run pre-commit run terraform_fmt --all-files
          poetry run pre-commit run terraform_tflint --all-files
          poetry run pre-commit run terraform_trivy --all-files

      # 5 — Lint ✨
      - name: Run pre-commit hooks
        run: poetry run pre-commit run --all-files --show-diff-on-failure

      # 5 — Tests
      - name: Run pytest
        run: poetry run pytest -q

      # 7 — Static typing
      - name: Run mypy
        run: poetry run mypy src

      # 8 — Type check (mypy)  – keep after tests so type errors fail job even if tests pass
      - name: Static type check
        run: poetry run mypy src

